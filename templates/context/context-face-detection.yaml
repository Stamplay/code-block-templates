name: Face detection with Cloudinary
type: sample
author: 
  name: claudio.petrini
  link: https://github.com/claudiopetrini
order: 13
description: |
  Face detection made easy using Cloudinary service and node module.
note:
  title: instructions
  content: |
    Our available modules include among third party services Cloudinary, an image and video managment on the cloud.
    Here is an example of how to use it for uploading an image on their service and request a face detection.
    After requiring and configuring the library using the secrets area in order to save the key and the secret, 
    we're uploading the image from an url and requesting the face detection feature.
code:
  es6: |
    const cloudinary = require('cloudinary');
    const options = {
      public_id: "eager_sample",
      eager: {
        gravity: "face",
        width: 200,
        height: 200,
        crop: 'thumb'
      }
    }
    
    module.exports = function (context, cb) {
      cloudinary.config({
        cloud_name: context.data.cloud_name,
        api_key: context.data.api_key,
        api_secret: context.data.api_secret,
        secure: true
      });
    
      cloudinary.uploader.upload(
        context.data.url,
        function (result) {
          return cb(null, result);
        }, options);
    };
sampleRequest: 
  method: 'POST'
  type: 'json'
  mode: 'body'
  data: |
    {"url" : "https://res.cloudinary.com/demo/image/upload/butterfly.jpg"}
settings:
  parse: true
  merge: true
secrets : 
  api_key : 'CLOUDINARY_API_KEY'
  api_secret : 'CLOUDINARY_API_SECRET'
